{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/billing/all-bills/all-bills.component.ts","webpack:///src/app/components/billing/all-bills/all-bills.component.html","webpack:///src/app/components/billing/create-bill/create-bill.component.ts","webpack:///src/app/components/billing/create-bill/create-bill.component.html","webpack:///src/app/components/billing/print-bill/print-bill.component.ts","webpack:///src/app/components/billing/print-bill/print-bill.component.html","webpack:///src/app/components/billing/show-bill/show-bill.component.ts","webpack:///src/app/components/billing/show-bill/show-bill.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/page404/page404.component.ts","webpack:///src/app/components/page404/page404.component.html","webpack:///src/app/components/user/change-password/change-password.component.ts","webpack:///src/app/components/user/change-password/change-password.component.html","webpack:///src/app/components/user/dashboard/dashboard.component.ts","webpack:///src/app/components/user/dashboard/dashboard.component.html","webpack:///src/app/components/user/user-login/user-login.component.ts","webpack:///src/app/components/user/user-login/user-login.component.html","webpack:///src/app/components/user/user-profile/user-profile.component.ts","webpack:///src/app/components/user/user-profile/user-profile.component.html","webpack:///src/app/components/user/user-register/user-register.component.ts","webpack:///src/app/components/user/user-register/user-register.component.html","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/bill-api.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/services/userapi.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","encapsulation","None","AppModule","provide","useClass","multi","config","tokenGetter","localStorage","getItem","allowedDomains","declarations","providers","bootstrap","AllBillsComponent","router","activatedRoute","billservice","fb","loading","queryParams","subscribe","params","cancelledReq","cancelled","console","log","getAppropriateData","getParticularBills","data","billDetails","getAllBills","bill","navigate","_id","CreateBillComponent","datePipe","discountGiven","disableBtn","today","transform","Date","getLastBillDetails","lastBillDet","billForm","patchValue","iniUpdateForm","addItem","valueChanges","valid","itemChanges$","controls","itemsData","updateTotalAmt","discChanges$","pct","updateDiscountedPrice","billDateChanges$","get","bdate","updateBillNum","group","party_name","required","maxLength","num","date","dc","po","items","array","total_amt","disctotal","grand_total","roundoff","discountPct","pattern","min","max","getNextBillDetails","description","rate","qty","amt","push","addItemGrp","idx","removeAt","itemCtrl","totalSum","i","at","setValue","toFixed","onlySelf","emitEvent","value","initotal","updateGrandTotal","grandtotal","Math","round","postBill","success","PrintBillComponent","userservice","loadingBill","loadingProfile","billID","snapshot","paramMap","getBill","currBill","spaceRequired","length","spaceClass","amtInWords","inWords","totamt","getProfile","userDet","ShowBillComponent","cancelMenu","iniCancelForm","cancelForm","cancel_reason","cancelBill","HomeComponent","NavbarComponent","userService","loggedIn","tokenObs","what","fname","logout","Page404Component","ChangePasswordComponent","msgService","pwdsMatch","updatePwdForm","password","newpassword","minLength","newpwdrepeat","newpwd","val","navigateByUrl","changePwd","fmsg","show","cssClass","timeout","err","onSubmit","toProfile","DashboardComponent","noOfBills","getCountOfBills","UserLoginComponent","flashMsgService","loginform","email","registered","login","message","UserProfileComponent","toUpdate","userInfo","updateform","disabled","pfname","plname","company_name","phn_no","address","place_no","street","locality","city","state","pincode","updateProfile","routeReuseStrategy","shouldReuseRoute","onSameUrlNavigation","UserRegisterComponent","signupform","register","done","AuthGuardService","isLoggedIn","providedIn","ForwardAuthGuardService","BillApiService","http","prodURL","deployUrl","baseURL","headers","set","token","cururl","bill_date","billdata","post","pipe","res","errorMgmt","cancelData","bid","put","error","errmsg","ErrorEvent","status","TokenInterceptorService","request","next","clone","setHeaders","Authorization","handle","UserapiService","jwtHelper","tokenBehaviour","asObservable","setItem","isTokenExpired","removeItem","getToken","deleteToken","setToken","newdata","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserLoginComponent } from './components/user/user-login/user-login.component';\nimport { UserRegisterComponent } from './components/user/user-register/user-register.component';\nimport { DashboardComponent } from './components/user/dashboard/dashboard.component';\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\nimport { AllBillsComponent } from './components/billing/all-bills/all-bills.component';\nimport { CreateBillComponent } from './components/billing/create-bill/create-bill.component';\nimport { ShowBillComponent } from './components/billing/show-bill/show-bill.component';\nimport { PrintBillComponent } from './components/billing/print-bill/print-bill.component';\nimport { ChangePasswordComponent } from './components/user/change-password/change-password.component';\nimport { HomeComponent } from'./components/home/home.component';\nimport { Page404Component } from './components/page404/page404.component';\n\nimport { UserapiService } from './services/userapi.service';\nimport { AuthGuardService,ForwardAuthGuardService } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  {path:'',pathMatch:'full',redirectTo:'/home'},\n  {path:'home',component:HomeComponent},\n  {path:'login',component:UserLoginComponent,canActivate:[ForwardAuthGuardService]},\n  {path:'register',component:UserRegisterComponent,canActivate:[ForwardAuthGuardService]},\n  {path:'dashboard',component:DashboardComponent,canActivate:[AuthGuardService]},\n  {path:'profile',component:UserProfileComponent,canActivate:[AuthGuardService]},\n  {path:'changePwd',component:ChangePasswordComponent,canActivate:[AuthGuardService]},\n  {path:'bills/create',component:CreateBillComponent,canActivate:[AuthGuardService]},\n  {path:'bills/show',component:AllBillsComponent,canActivate:[AuthGuardService]},\n  {path:'bills/show/:id',component:ShowBillComponent,canActivate:[AuthGuardService]},\n  {path:'bills/print/:id',component:PrintBillComponent,canActivate:[AuthGuardService]},\n  {path:'**',component:Page404Component},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation:ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\n<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n\n<footer class=\"py-4 bg-dark text-white-50\" id=\"sticky-footer\">\n    <div class=\"container text-center\">\n        Developed by Yash Brahmkshatriya \n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/yash-brahmkshatriya-9b47a51b1/\">Contact Me</a>\n    </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DatePipe } from '@angular/common';\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { UserLoginComponent } from './components/user/user-login/user-login.component';\nimport { UserRegisterComponent } from './components/user/user-register/user-register.component';\nimport { DashboardComponent } from './components/user/dashboard/dashboard.component'\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\nimport { CreateBillComponent } from './components/billing/create-bill/create-bill.component';\nimport { AllBillsComponent } from './components/billing/all-bills/all-bills.component';\nimport { ShowBillComponent } from './components/billing/show-bill/show-bill.component';\nimport { PrintBillComponent } from './components/billing/print-bill/print-bill.component';\n\n// Services\nimport { UserapiService } from './services/userapi.service';\nimport { AuthGuardService,ForwardAuthGuardService } from './services/auth-guard.service';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { ChangePasswordComponent } from './components/user/change-password/change-password.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { Page404Component } from './components/page404/page404.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserLoginComponent,\n    UserRegisterComponent,\n    DashboardComponent,\n    NavbarComponent,\n    UserProfileComponent,\n    CreateBillComponent,\n    AllBillsComponent,\n    ShowBillComponent,\n    PrintBillComponent,\n    ChangePasswordComponent,\n    HomeComponent,\n    Page404Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FlashMessagesModule.forRoot(),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter : () => {return localStorage.getItem('auth-token');},\n        allowedDomains : [\"http://localhost:8000\"]\n      }\n    })\n  ],\n  providers: [\n    UserapiService,\n    AuthGuardService,\n    ForwardAuthGuardService,\n    DatePipe,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass :TokenInterceptorService,\n      multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BillApiService } from '../../../services/bill-api.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-all-bills',\n  templateUrl: './all-bills.component.html',\n  styleUrls: ['./all-bills.component.css']\n})\nexport class AllBillsComponent implements OnInit {\n\n  public billDetails:any;\n  public loading:boolean = true;\n  public cancelledReq:boolean;\n\n  constructor(\n    private router:Router,\n    private activatedRoute:ActivatedRoute,\n    private billservice:BillApiService,\n    private fb:FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.loading = true;\n      this.cancelledReq = params.cancelled;\n      console.log('req->',this.cancelledReq);\n      this.getAppropriateData();\n    })\n  }\n\n  getAppropriateData() {\n    // not empty\n    if(this.cancelledReq){\n      this.billservice.getParticularBills(this.cancelledReq).subscribe(data => {\n        console.log('Data is ',data)\n        this.billDetails = data;\n        this.loading = false;\n      })\n    }\n    else {\n      this.billservice.getAllBills().subscribe(data => {\n        this.billDetails = data;\n        this.loading = false;\n      })\n    }\n  }\n\n  showBill(bill):void {\n    this.router.navigate(['/bills/show',bill._id]);\n  }\n}\n","<div class=\"container loading\" *ngIf=\"loading\">\n  <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n  <div class=\"display-4\" style=\"font-size: x-large;\">\n    Loading... Please Wait\n  </div>\n</div>\n<div class=\"card mt-5 ml-5 mr-5 mb-5\">\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1 class=\"display-4\">Your Bills</h1>\n      </div>\n      <div class=\"col-md-2\">\n        <a [routerLink]=\"['/bills/show']\" [queryParams]=\"{cancelled:true}\">Cancelled Bills</a>\n      </div>\n      <div class=\"col-md-1\">\n        <a [routerLink]=\"['/bills/show']\">All Bills</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-body\" *ngIf=\"!loading\">\n    <div>\n    <table class=\"table table-stripped table-hover\" >\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Bill No</th>\n          <th scope=\"col\">Bill Date</th>\n          <th scope=\"col\">Party Name</th>\n          <th scope=\"col\">No of items</th>\n          <th scope=\"col\">Total Amount</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody *ngFor=\"let bill of billDetails;let i=index;\">\n        <tr *ngIf=\"cancelledReq===undefined && bill.cancelled; else allBills\" class=\"table-danger\">\n          <th scope=\"row\" style=\"width: 5%;\">{{i+1}}</th>\n          <td class=\"tdcss\" style=\"width: 8%;\">{{bill.bill.num}}</td>\n          <td class=\"tdcss\" style=\"width: 12%;\">{{bill.bill.date | date:'dd/MM/yyyy'}}</td>\n          <td class=\"tdcss\" style=\"width: 35%;\">{{bill.party_name}}</td>\n          <td class=\"tdcss\" style=\"width: 15%;\">{{bill.items.length}}</td>\n          <td class=\"tdcss\" style=\"width: 15%;\">{{bill.grand_total}}</td>\n          <td class=\"button-cell\"><button type=\"button\" class=\"btn btn-outline-success\" (click)=\"showBill(bill)\">Show</button></td>\n        </tr>\n        <ng-template #allBills>\n          <tr>\n            <th scope=\"row\" style=\"width: 5%;\">{{i+1}}</th>\n            <td class=\"tdcss\" style=\"width: 8%;\">{{bill.bill.num}}</td>\n            <td class=\"tdcss\" style=\"width: 12%;\">{{bill.bill.date | date:'dd/MM/yyyy'}}</td>\n            <td class=\"tdcss\" style=\"width: 35%;\">{{bill.party_name}}</td>\n            <td class=\"tdcss\" style=\"width: 15%;\">{{bill.items.length}}</td>\n            <td class=\"tdcss\" style=\"width: 15%;\">{{bill.grand_total}}</td>\n            <td class=\"button-cell\"><button type=\"button\" class=\"btn btn-outline-success\" (click)=\"showBill(bill)\">Show</button></td>\n          </tr>\n        </ng-template>\n      </tbody>\n    </table>\n    </div>\n  </div>\n</div>  \n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BillApiService } from '../../../services/bill-api.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-create-bill',\n  templateUrl: './create-bill.component.html',\n  styleUrls: ['./create-bill.component.css']\n})\nexport class CreateBillComponent implements OnInit {\n\n  billForm:FormGroup;\n  today:any;\n  lastBillDet:any;\n  discountGiven:boolean = false;\n  public loading:boolean = true;\n  public disableBtn:boolean = true;\n\n\n  constructor(\n    private router:Router,\n    private billservice:BillApiService,\n    private fb:FormBuilder,\n    private datePipe:DatePipe\n  ) { }\n\n  ngOnInit(): void {\n    this.today = this.datePipe.transform(new Date(),'yyyy-MM-dd');\n    this.billservice.getLastBillDetails().subscribe(data => {\n      this.loading = false;\n      this.lastBillDet = data;\n      this.lastBillDet['bill']['date'] = this.today;\n      this.lastBillDet['dc']['date'] = this.today;\n      this.billForm.patchValue({\n          'bill':this.lastBillDet['bill'],\n          'dc':this.lastBillDet['dc'],\n          'po':{\n            'date':this.today\n          }\n        })\n    })\n    this.iniUpdateForm();\n    this.addItem();\n    this.billForm.valueChanges.subscribe(() => {\n      this.disableBtn = !this.billForm.valid;\n    })\n    \n    const itemChanges$ = this.billForm.controls['items'].valueChanges;\n    itemChanges$.subscribe(itemsData => this.updateTotalAmt(itemsData));\n\n    const discChanges$ = this.billForm.controls['discountPct'].valueChanges;\n    discChanges$.subscribe(pct => this.updateDiscountedPrice(pct));\n\n    const billDateChanges$ = this.billForm.get('bill').get('date').valueChanges;\n    billDateChanges$.subscribe(bdate => this.updateBillNum(bdate));\n  }\n\n  iniUpdateForm() {\n    this.billForm = this.fb.group({\n      party_name:['',[Validators.required,Validators.maxLength(255)]],\n      bill:this.fb.group({\n        num:[''],\n        date:['']\n      }),\n      dc:this.fb.group({\n        num:[''],\n        date:['']\n      }),\n      po:this.fb.group({\n        num:[''],\n        date:['']\n      }),\n      items:this.fb.array([]),\n      total_amt:[0],\n      disctotal:[0],\n      grand_total:[0],\n      roundoff:[0],\n      discountPct:[0,[Validators.pattern(\"^[0-9]+(\\.[0-9]{1,3})?$\"),Validators.min(0),Validators.max(100)]]\n    })\n  }\n\n  get billform(){\n    return this.billForm.controls;\n  }\n  get party_name(){return this.billForm.get('party_name');}\n  get bill(){return this.billForm.get('bill');}\n  get dc(){return this.billForm.get('dc');}\n  get po(){return this.billForm.get('po');}\n  get items(){return this.billForm.get('items');}\n  get total_amt(){return this.billForm.get('tot_amt');}\n  get disctotal(){return this.billForm.get('disctotal');}\n  get grand_total(){return this.billForm.get('grand_total');}\n  get roundoff(){return this.billForm.get('roundoff');}\n  get discountPct(){return this.billForm.get('discountPct');}\n\n\n  updateBillNum(bdate:Date): void {\n    this.loading = true;\n    this.billservice.getNextBillDetails(bdate).subscribe(data => {\n      this.billForm.patchValue({\n        'bill':{\n          'num':data['billno'],\n        },\n        'dc':{\n          'num':data['dcno']\n        }\n      })\n      this.lastBillDet['bill']['num'] = data['billno']\n      this.lastBillDet['dc']['num'] = data['dcno']\n      this.loading = false;\n    })\n  }\n\n  addItemGrp() : FormGroup {\n    return this.fb.group({\n      // grpidx:[''],\n      description:['',[Validators.required,Validators.maxLength(255)]],\n      rate:['',[Validators.required]],\n      qty:['',[Validators.required]],\n      amt:['',[Validators.required]]\n    });\n  }\n\n  addItem():void {\n    (<FormArray>this.billForm.get('items')).push(this.addItemGrp());\n  }\n\n  removeItem(idx:number){\n    (<FormArray>this.billForm.get('items')).removeAt(idx);\n  }\n\n  updateTotalAmt(items:any) {\n    const itemCtrl = this.billForm.get('items') as FormArray;\n    let totalSum = 0;\n    for(let i in items) {\n      const amt = items[i].qty * items[i].rate;\n      itemCtrl.at(+i).get('amt').setValue(amt.toFixed(2),{onlySelf:true,emitEvent:false});\n      totalSum+=amt;\n    }\n    this.billForm.get('total_amt').setValue(totalSum.toFixed(2));\n    this.updateDiscountedPrice(this.billForm.get('discountPct').value);\n  }\n\n  updateDiscountedPrice(pct:any) {\n    const initotal = this.billForm.get('total_amt').value;\n    let disctotal = initotal * (1-pct/100);\n    this.billForm.get('disctotal').setValue(disctotal.toFixed(2));\n    this.updateGrandTotal();\n  }\n\n  updateGrandTotal():void {\n    let disctotal = this.billForm.get('disctotal').value;\n    let grandtotal = Math.round(disctotal);\n    this.billForm.get('roundoff').setValue((grandtotal-disctotal).toFixed(2));\n    this.billForm.get('grand_total').setValue(grandtotal);\n  }\n\n  toggleDiscount(): void {\n    this.discountGiven = !this.discountGiven;\n    this.billForm.get('discountPct').setValue(0);\n  }\n\n  onsubmit() {\n    if(!this.billForm.valid){return false;}\n    else {\n      console.log(this.billForm.value);\n      this.billservice.postBill(this.billForm.value).subscribe(success => {\n        console.log(success);\n        this.router.navigate(['/bills/show'],{queryParams:{cancelled:false}})\n      })\n    }\n  }\n}\n","<div class=\"container loading\" *ngIf=\"loading\">\n  <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n  <div class=\"display-4\" style=\"font-size: x-large;\">\n    Loading... Please Wait\n  </div>\n</div>\n<div class=\"card mt-5 ml-4 mr-4 mb-5\">\n  <div class=\"card-header\">\n    <h1 class=\"display-4\">Create Bill</h1>\n  </div>\n  <div class=\"card-body\" *ngIf=\"!loading\">\n    <div>\n      <form [formGroup]=\"billForm\" (ngSubmit)=\"onsubmit()\">\n        <!-- < PARTY NAME > -->\n        <div class=\"form-group\">\n          <label for=\"party_name\" class=\"heading\">Party Name</label>\n          <input type=\"text\" formControlName=\"party_name\" class=\"form-control\" placeholder=\"Bill given to\" [ngClass]=\"{'is-invalid':party_name.invalid && (party_name.dirty || party_name.touched)}\">\n          <span class=\"invalid-feedback\" *ngIf=\"party_name.invalid && (party_name.dirty || party_name.touched)\">\n            <p *ngIf=\"party_name.errors?.required\">Party Name is required.</p>\n            <p *ngIf=\"party_name.errors?.maxlength\">Party Name must be at most 255 characters long.</p>\n          </span>\n        </div>\n        \n        <!-- < Various Numbers and Dates > -->\n        <div class=\"form-row\">\n          <div class=\"form-row col-md-4\" formGroupName=\"bill\">\n            <div class=\"form-group col-md-5\">\n              <label for=\"bill_no\" class=\"heading\">Bill No.</label>\n              <input type=\"number\" formControlName=\"num\" class=\"form-control\" placeholder=\"Bill Number\" disabled>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"bill_date\" class=\"heading\">Bill Date</label>\n              <input type=\"date\" formControlName=\"date\" class=\"form-control\">\n            </div>\n            <div class=\"col-md-1\"></div>\n          </div>\n          <div class=\"form-row col-md-4\" formGroupName=\"dc\">\n            <div class=\"form-group col-md-5\">\n              <label for=\"dc_no\" class=\"heading\">DC No.</label>\n              <input type=\"number\" formControlName=\"num\" class=\"form-control\" placeholder=\"DC Number\" disabled>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"dc_date\" class=\"heading\">DC Date</label>\n              <input type=\"date\" formControlName=\"date\" class=\"form-control\">\n            </div>\n            <div class=\"col-md-1\"></div>\n          </div>\n          <div class=\"form-row col-md-4\" formGroupName=\"po\">\n            <div class=\"form-group col-md-5\">\n              <label for=\"dc_no\" class=\"heading\">PO No.</label>\n              <input type=\"number\" formControlName=\"num\" class=\"form-control\" placeholder=\"PO Number\">\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"dc_date\" class=\"heading\">PO Date</label>\n              <input type=\"date\" formControlName=\"date\" class=\"form-control\">\n            </div>\n            <div class=\"col-md-1\"></div>\n          </div>\n        </div>\n        <hr>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <span class=\"h6\">\n              Any Discount ?\n            </span>\n            <label class=\"switch\">\n              <input type=\"checkbox\" (click)=\"toggleDiscount()\">\n              <span class=\"slider round\">\n              </span>\n            </label>\n          </div>\n          <div class=\"col-2\" *ngIf=\"discountGiven\">\n            <label for=\"discount\" class=\"heading\">Discount %</label>\n            <input type=\"text\" formControlName=\"discountPct\" class=\"form-control\" [ngClass]=\"{'is-invalid':discountPct.invalid && (discountPct.touched || discountPct.dirty)}\">\n            <span class=\"invalid-feedback\" *ngIf=\"discountPct.invalid && (discountPct.touched || discountPct.dirty)\">\n              <p *ngIf=\"discountPct.errors?.pattern;else pctRange\">Only digits Allowed</p>\n              <ng-template #pctRange>\n                <p *ngIf=\"discountPct.errors?.max || discountPct.errors?.min\">Must be between 0 & 100</p>\n              </ng-template>\n            </span>\n          </div>\n        </div>\n        <hr>\n        <h1 class=\"display-4\" style=\"font-size: 36px;font-weight: 400;\">Items</h1>\n        <table class=\"table table-stripped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Qty</th>\n              <th scope=\"col\">Rate</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody formArrayName=\"items\" *ngFor=\"let item of billForm.get('items')['controls'];let i = index;\">\n            <tr [formGroupName]=\"i\">\n              <th scope=\"row\" class=\"heading\">{{i+1}}</th>\n              <td style=\"width: 61%;\">\n                <input type=\"text\" formControlName=\"description\" class=\"form-control\">\n                <!-- <span class=\"invalid-feedback\" *ngIf=\"billform.items[i].description.invalid && (billform.items[i].description.touched || billform.items[i].description.dirty)\">\n                  <p *ngIf=\"billform.items[i].description.errors?.required\">Description is required.</p>\n                </span> -->\n              </td>\n              <td style=\"width: 13%;\">\n                <input type=\"number\" formControlName=\"qty\" class=\"form-control\">\n              </td>\n              <td style=\"width: 13%;\">\n                <input type=\"number\" formControlName=\"rate\" class=\"form-control\">\n              </td>\n              <td style=\"width: 13%;\">\n                <input type=\"number\" formControlName=\"amt\" class=\"form-control\" disabled>\n              </td>\n              <td >\n                <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"removeItem(i)\">Remove</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <hr>\n        <div class=\"row\">\n          <div class=\"col-8\"></div>\n          <div class=\"col-4\">\n            <div class=\"row\">\n              <div class=\"col\" style=\"text-align: end;\">\n                <span class=\"h4\">Total Amount: </span>\n              </div>\n              <div class=\"col\">\n                <span class=\"amtcss\">{{billform.total_amt.value}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"discountGiven\" class=\"row\">\n          <div class=\"col-8\"></div>\n          <div class=\"col-4\">\n            <div class=\"row\">\n              <div class=\"col\" style=\"text-align: end;\">\n                <span class=\"h4\">Disc Price: </span>\n              </div>\n              <div class=\"col\">\n                <span class=\"amtcss\">{{billform.disctotal.value}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col-8\"></div>\n          <div class=\"col-4\">\n            <div class=\"row\">\n              <div class=\"col\" style=\"text-align: end;\">\n                <span class=\"h4\">Round Off: </span>\n              </div>\n              <div class=\"col\">\n                <span class=\"amtcss\" *ngIf=\"billform.roundoff.value>0\">+</span>\n                <span class=\"amtcss\">{{billform.roundoff.value}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"row\">\n          <div class=\"col-8\"></div>\n          <div class=\"col-4\">\n            <div class=\"row\">\n              <div class=\"col\" style=\"text-align: end;\">\n                <span class=\"h4\">Grand Total: </span>\n              </div>\n              <div class=\"col\">\n                <span class=\"amtcss\">{{billform.grand_total.value}}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <button type=\"button\" class=\"btn btn-outline-primary btn-lg mr-3\" (click)=\"addItem()\">Add Item</button>\n        <button type=\"submit\" class=\"btn btn-success btn-lg mr-3\" [disabled]=\"disableBtn\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { BillApiService } from '../../../services/bill-api.service';\nimport { UserapiService } from '../../../services/userapi.service'\ndeclare const inWords:any;\n\n@Component({\n  selector: 'app-print-bill',\n  templateUrl: './print-bill.component.html',\n  styleUrls: ['./print-bill.component.css']\n})\nexport class PrintBillComponent implements OnInit {\n  \n  private billID:string;\n  public currBill:any;\n  public userDet:any;\n  public discountGiven:boolean = false;\n  public amtInWords:string;\n  public loadingBill:boolean = true;\n  public loadingProfile:boolean = true;\n  public spaceRequired:number;\n  public spaceClass:string;\n\n  constructor(\n    private router:Router,\n    private activatedRoute:ActivatedRoute,\n    private billservice:BillApiService,\n    private userservice:UserapiService\n  ) { }\n\n  ngOnInit(): void {\n    this.billID = this.activatedRoute.snapshot.paramMap.get('id');\n    this.billservice.getBill(this.billID).subscribe(data => {\n      this.loadingBill = false;\n      this.currBill = data;\n      this.spaceRequired = 5 - this.currBill['items'].length;\n      this.spaceClass = `space-${this.spaceRequired}`\n      this.amtInWords = inWords(this.currBill['grand_total']);\n      let totamt = 0,disctotal=0;\n      for(let i=0;i<this.currBill['items'].length;i++){\n        totamt+=this.currBill['items'][i]['amt'];\n        this.currBill['items'][i]['amt'] = (this.currBill['items'][i]['amt']).toFixed(2);\n      }\n      disctotal = totamt * (1-this.currBill['discountPct']/100);\n      this.currBill['tot_amt'] = totamt.toFixed(2);\n      this.currBill['disctotal'] = disctotal.toFixed(2);\n      this.currBill['grand_total'] = (this.currBill['grand_total']).toFixed(2);\n      if(this.currBill['discountPct']>0){this.discountGiven = true;}\n      this.currBill['roundoff'] = (this.currBill['grand_total'] - this.currBill['disctotal']).toFixed(2);\n    })\n    this.userservice.getProfile().subscribe(data => {\n      this.loadingProfile = false;\n      this.userDet = data;\n      this.userDet['addressString'] = this.userDet['address']['place_no'];\n      this.userDet['addressString'] += ', ' + this.userDet['address']['street'];\n      this.userDet['addressString'] += ', ' + this.userDet['address']['locality'];\n      this.userDet['addressString'] += ', ' + this.userDet['address']['city'];\n      this.userDet['addressString'] += ', ' + this.userDet['address']['pincode'];\n    })\n  }\n\n}\n","<div class=\"container loading\" *ngIf=\"loadingBill || loadingProfile\">\n  <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n  <div class=\"display-4\" style=\"font-size: x-large;\">\n    Loading... Please Wait\n  </div>\n</div>\n<div style=\"background-color:white;padding: 5px;\">\n  <div class=\"container mt-4 ml-4 mb-5\" *ngIf=\"!loadingBill && !loadingProfile\">\n    <table class=\"table table-bordered\" style=\"margin-left:5%;\">\n      <thead style=\"text-align: center;\">\n        <tr>\n          <th colspan=\"5\" class=\"display-4 companyname\" >{{userDet.company_name}}</th>\n        </tr>\n        <tr>\n          <td colspan=\"3\" class=\"addphn\">\n            {{userDet.addressString}} \n          </td>\n          <td colspan=\"2\" class=\"h5\">\n            M : {{userDet.phn_no}}\n          </td>\n        </tr>\n        <tr>\n          <th colspan=\"5\">\n            <div class=\"row\">\n              <div class=\"col-md-6 billheading\" style=\"text-align: end;\">BILL</div>\n              <div class=\"col-md-6 copyheading\" style=\"text-align: end;\">Original Copy</div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <td colspan=\"2\" style=\"text-align: left;\">\n            <div style=\"font-size: large;\"><span class=\"h5\">M/s </span>{{currBill.party_name}}</div>\n          </td>\n          <td colspan=\"3\" style=\"text-align: left;\">\n            <div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">Bill No. : </span>{{ currBill.bill.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.bill.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">D.C. No. : </span>{{ currBill.dc.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.dc.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">P.O. No. : </span>{{ currBill.po.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.po.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n            </div>\n          </td>\n        </tr>\n        <tr class=\"thead-dark\">\n          <th scope=\"col\" style=\"width: 5%;\">Sr.No.</th>\n          <th scope=\"col\" style=\"width: 50%;\">Description</th>\n          <th scope=\"col\">Qty</th>\n          <th scope=\"col\">Rate</th>\n          <th scope=\"col\">Amount in Rs.</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of currBill.items;let i=index;\">\n          <td>{{i+1}}</td>\n          <td>{{item.description}}</td>\n          <td style=\"text-align: center;\">{{item.qty}}</td>\n          <td style=\"text-align: center;\">{{item.rate}}</td>\n          <td style=\"text-align: end;\">{{item.amt}}</td>\n        </tr>\n        <tr [ngClass]=\"spaceClass\">\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td colspan=\"2\" style=\"text-align: end;\">Total Amount</td>\n          <td colspan=\"1\" style=\"text-align: end;\">{{currBill.tot_amt}}</td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td colspan=\"2\" style=\"text-align: end;\">Discounted Price@{{currBill.discountPct}}%</td>\n          <td colspan=\"1\" style=\"text-align: end;\">{{currBill.disctotal}}</td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td colspan=\"2\" style=\"text-align: end;\">Round Off</td>\n          <td colspan=\"1\" style=\"text-align: end;\">\n            <span *ngIf=\"currBill.roundoff>0\">+</span>\n            {{currBill.roundoff}}\n          </td>\n        </tr>\n        <tr>\n          <td colspan=\"2\">\n            <div>\n              <i class=\"h6\">In Word: Rupees </i>\n              <i>{{amtInWords}}</i>\n            </div>\n          </td>\n          <td colspan=\"2\" class=\"h6\" style=\"text-align: end;\">Grand Total</td>\n          <td colspan=\"1\" class=\"h6\" style=\"text-align: end;\">{{currBill.grand_total}}</td>\n        </tr>\n        <tr>\n          <td colspan=\"2\" style=\"width: 70%;font-size: small;\">\n            <span class=\"h6\">Terms & Conditions : </span>\n            (1) All Transaction are subjects to {{userDet.address.city}} court. \n            (2) Goods Once sold will not be taken back or replace. \n            (3) Risk and responsibility ceases on delivery goods. \n            (4) Interest 24% p.a. will be charged on over due payments. (5) E. & O.E.\n          </td>\n          <td colspan=\"3\" style=\"text-align: center;\">\n            <i class=\"h6\">For, </i> {{userDet.company_name}}\n            <br><br>\n            <i class=\"h6\">Authorised Signatory</i>\n          </td>\n        </tr>\n    </tbody>\n    </table>\n  </div>\n  <br><br>\n  <!-- --------------------------------- -->\n  <div class=\"container mt-4 ml-4 mb-5\">\n    <table class=\"table table-bordered\" style=\"margin-left:5%;\">\n      <thead style=\"text-align: center;\">\n        <tr>\n          <th colspan=\"5\" class=\"display-4 companyname\" >{{userDet.company_name}}</th>\n        </tr>\n        <tr>\n          <td colspan=\"3\" class=\"addphn\">\n            {{userDet.addressString}} \n          </td>\n          <td colspan=\"2\" class=\"h5\">\n            M : {{userDet.phn_no}}\n          </td>\n        </tr>\n        <tr>\n          <th colspan=\"5\">\n            <div class=\"row\">\n              <div class=\"col-md-6 billheading\" style=\"text-align: end;\">BILL</div>\n              <div class=\"col-md-6 copyheading\" style=\"text-align: end;\">Duplicate Copy</div>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          <td colspan=\"2\" style=\"text-align: left;\">\n            <div style=\"font-size: large;\"><span class=\"h5\">M/s </span>{{currBill.party_name}}</div>\n          </td>\n          <td colspan=\"3\" style=\"text-align: left;\">\n            <div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">Bill No. : </span>{{ currBill.bill.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.bill.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">D.C. No. : </span>{{ currBill.dc.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.dc.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-7\">\n                  <span class=\"h6\">P.O. No. : </span>{{ currBill.po.num}}\n                </div>\n                <div class=\"col-md-5\">\n                  <span class=\"h6\">Date : </span>{{currBill.po.date | date:'dd/MM/yyyy'}}\n                </div>\n              </div>\n            </div>\n          </td>\n        </tr>\n        <tr class=\"thead-dark\">\n          <th scope=\"col\" style=\"width: 5%;\">Sr.No.</th>\n          <th scope=\"col\" style=\"width: 50%;\">Description</th>\n          <th scope=\"col\">Qty</th>\n          <th scope=\"col\">Rate</th>\n          <th scope=\"col\">Amount in Rs.</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of currBill.items;let i=index;\">\n          <td>{{i+1}}</td>\n          <td>{{item.description}}</td>\n          <td style=\"text-align: center;\">{{item.qty}}</td>\n          <td style=\"text-align: center;\">{{item.rate}}</td>\n          <td style=\"text-align: end;\">{{item.amt}}</td>\n        </tr>\n        <tr [ngClass]=\"spaceClass\">\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td colspan=\"2\" style=\"text-align: end;\">Total Amount</td>\n          <td colspan=\"1\" style=\"text-align: end;\">{{currBill.tot_amt}}</td>\n      </tr>\n      <tr>\n        <td colspan=\"2\"></td>\n        <td colspan=\"2\" style=\"text-align: end;\">Discounted Price@{{currBill.discountPct}}%</td>\n        <td colspan=\"1\" style=\"text-align: end;\">{{currBill.disctotal}}</td>\n      </tr>\n      <tr>\n        <td colspan=\"2\"></td>\n        <td colspan=\"2\" style=\"text-align: end;\">Round Off</td>\n        <td colspan=\"1\" style=\"text-align: end;\">\n          <span *ngIf=\"currBill.roundoff>0\">+</span>\n          {{currBill.roundoff}}\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <div>\n            <i class=\"h6\">In Word: Rupees </i>\n            <i>{{amtInWords}}</i>\n          </div>\n        </td>\n        <td colspan=\"2\" class=\"h6\" style=\"text-align: end;\">Grand Total</td>\n        <td colspan=\"1\" class=\"h6\" style=\"text-align: end;\">{{currBill.grand_total}}</td>\n      </tr>\n      <tr>\n        <td colspan=\"2\" style=\"width: 70%;font-size: small;\">\n          <span class=\"h6\">Terms & Conditions : </span>\n          (1) All Transaction are subjects to {{userDet.address.city}} court. \n          (2) Goods Once sold will not be taken back or replace. \n          (3) Risk and responsibility ceases on delivery goods. \n          (4) Interest 24% p.a. will be charged on over due payments. (5) E. & O.E.\n        </td>\n        <td colspan=\"3\" style=\"text-align: center;\">\n          <i class=\"h6\">For, </i> {{userDet.company_name}}\n          <br><br>\n          <i class=\"h6\">Authorised Signatory</i>\n        </td>\n      </tr>\n    </tbody>\n    </table>\n  </div>\n</div>\n<br><br><br><br>","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { BillApiService } from '../../../services/bill-api.service';\nimport { FormControl, FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-show-bill',\n  templateUrl: './show-bill.component.html',\n  styleUrls: ['./show-bill.component.css']\n})\nexport class ShowBillComponent implements OnInit {\n\n  private billID:string;\n  public currBill:any;\n  public discountGiven:boolean = false;\n  public loading:boolean = true;\n  public cancelMenu:boolean = false;\n  public cancelForm:FormGroup;\n\n  constructor(\n    private router:Router,\n    private fb:FormBuilder,\n    private activatedRoute:ActivatedRoute,\n    private billservice:BillApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.billID = this.activatedRoute.snapshot.paramMap.get('id');\n    this.billservice.getBill(this.billID).subscribe(data => {\n      this.loading = false;\n      this.currBill = data\n      let totamt = 0,disctotal=0;\n      for(let i=0;i<this.currBill['items'].length;i++){\n        totamt+=this.currBill['items'][i]['amt'];\n      }\n      disctotal = totamt * (1-this.currBill['discountPct']/100);\n      this.currBill['tot_amt'] = totamt;\n      this.currBill['disctotal'] = disctotal;\n      if(this.currBill['discountPct']>0){this.discountGiven = true;}\n      this.currBill['roundoff'] = (this.currBill['grand_total'] - this.currBill['disctotal']).toFixed(2);\n    });\n    this.iniCancelForm();\n  }\n\n  iniCancelForm() {\n    this.cancelForm = this.fb.group({\n      cancelled:[true],\n      cancel_reason:['']\n    })\n  }\n\n  printBill(): void {\n    this.router.navigate(['bills/print',this.billID]);\n  }\n\n  toggleCancelMenu(): void {\n    this.cancelMenu = !this.cancelMenu;\n  }\n\n  cancelBill() {\n    console.log(this.cancelForm.value);\n    this.billservice.cancelBill(this.cancelForm.value,this.billID).subscribe( data => {\n      this.router.navigate(['/bills/show']);\n    })\n  }\n\n}\n","<div class=\"container loading\" *ngIf=\"loading\">\n  <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n  <div class=\"display-4\" style=\"font-size: x-large;\">\n    Loading... Please Wait\n  </div>\n</div>\n<div class=\"card mt-5 mb-5 ml-5 mr-5\" >\n  <div class=\"card-header\">\n    <h1 class=\"display-4\" style=\"font-size: 40px;\">Bill No. {{currBill.bill.num}} of year {{currBill.bill.date|date:'yyyy'}}</h1>\n  </div>\n  <div class=\"card-body\" >\n    <div>\n      <h5>Party Name : <small>{{currBill.party_name}}</small></h5>\n    </div>\n    <div class=\"row\">\n      <div class=\"row col-4\">\n        <div class=\"col-5\">\n          <h5>Bill No</h5>\n          <p class=\"amtcss\">{{currBill.bill.num}}</p>\n        </div>\n        <div class=\"col-6\">\n          <h5>Bill Date</h5>\n          <p class=\"amtcss\">{{currBill.bill.date|date:'dd/MM/yyyy'}}</p>\n        </div>\n        <div class=\"col-1\"></div>\n      </div>\n  \n      <div class=\"row col-4\">\n        <div class=\"col-5\">\n          <h5>DC No</h5>\n          <p class=\"amtcss\">{{currBill.dc.num}}</p>\n        </div>\n        <div class=\"col-6\">\n          <h5>DC Date</h5>\n          <p class=\"amtcss\">{{currBill.dc.date|date:'dd/MM/yyyy'}}</p> \n        </div>\n        <div class=\"col-1\"></div>\n      </div>\n  \n      <div class=\"row col-4\">\n        <div class=\"col-5\">\n          <h5>PO No</h5>\n          <p class=\"amtcss\">{{currBill.po.num}}</p>\n        </div>\n        <div class=\"col-6\">\n          <h5>PO Date</h5>\n          <p class=\"amtcss\">{{currBill.po.date|date:'dd/MM/yyyy'}}</p> \n        </div>\n        <div class=\"col-1\"></div>\n      </div>\n    </div>\n    <hr>\n    <div *ngIf=\"currBill.cancelled\">\n      <h6>This Bill was Cancelled</h6>\n      <p>\n        <span class=\"h6\">Reason for Cancellation: </span>\n        {{currBill.cancel_reason}}\n      </p>\n    </div>\n    <hr>\n    <div>\n      <table class=\"table table-stripped\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Qty</th>\n            <th scope=\"col\">Rate</th>\n            <th scope=\"col\">Amt</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let item of currBill.items;let i = index;\" class=\"border-left border-right\">\n          <tr>\n            <th scope=\"row\" style=\"width: 10%;\">{{i+1}}</th>\n            <td class=\"tdcss\" style=\"width: 40%;\">{{item.description}}</td>\n            <td style=\"width: 20%;\">{{item.qty}}</td>\n            <td style=\"width: 20%;\">{{item.rate}}</td>\n            <td>{{item.amt}}</td>\n          </tr>\n        </tbody>\n        <tbody class=\"border\">\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td class=\"h4 border\">Total Amount</td>\n            <td class=\"border\">{{currBill.tot_amt}}</td>\n          </tr>\n          <tr *ngIf=\"discountGiven\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td class=\"h4 border\">Discounted Price</td>\n            <td class=\"border\">{{currBill.disctotal}}</td>\n          </tr>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td class=\"h4 border\">Round Off</td>\n            <td class=\"border\">\n              <span *ngIf=\"currBill.roundoff>0\">+</span>\n              {{currBill.roundoff}}\n            </td>\n          </tr>\n          <tr class=\"border-bottom\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td class=\"h4 border\">Grand Total</td>\n            <td class=\"border\">{{currBill.grand_total}}</td>\n          </tr>\n        </tbody>\n      </table>\n      \n      <div class=\"container mt-4 mb-5\" *ngIf=\"!cancelMenu && !currBill.cancelled\">\n        <div class=\"btn-group\" style=\"width:100%;\">\n          <button type=\"button\" class=\"btn btn-dark btn-lg\" style=\"width: 50%;\" (click)=\"printBill()\">\n            <i class=\"fa fa-print\"></i>\n            Print Bill\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-danger btn-lg\" style=\"width: 50%;\" (click)=\"toggleCancelMenu()\">\n            <i class=\"fa fa-times\"></i>\n            Cancel Bill\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"container mt-4 mb-5\" *ngIf=\"cancelMenu\">\n        <div [formGroup]=\"cancelForm\" class=\"form-group\">\n          <label for=\"cancel_reason\">Reason for Cancelling Bill</label>\n          <textarea name=\"cancel_reason\" id=\"cancel_reason\" formControlName=\"cancel_reason\" class=\"form-control\"></textarea>\n        </div>\n        <div class=\"btn-group\" style=\"width:100%;\">\n          <button type=\"button\" class=\"btn btn-outline-danger btn-lg\" style=\"width: 50%;\" (click)=\"cancelBill()\">\n            <i class=\"fa fa-print\"></i>\n            Confirm Operation\n          </button>\n          <button type=\"button\" class=\"btn btn-dark btn-lg\" style=\"width: 50%;\" (click)=\"toggleCancelMenu()\">\n            <i class=\"fa fa-times\"></i>\n            Cancel Operation\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"divbg\">\n  <div class=\"container\" style=\"min-height: 100vh;padding-top: 5%;\">\n    <div class=\"row py-5 align-items-center\">\n      <div class=\"col-md-5 pr-lg-5 mb-5 mb-md-0\" style=\"text-align: center;\">\n        <img src=\"/assets/imgs/invoices.svg\" alt=\"\" class=\"img-fluid mb-3 d-none d-md-block\">\n        <br>\n        <h1>Get All Your Billing Needs Covered</h1>\n      </div>\n      <div class=\"col-md-7 col-lg-6 ml-auto\">\n        <h1>Billing System</h1>\n        <p style=\"font-size: larger;\">\n          Create, See and Cancel Bills as per your need.<br>\n          Anytime, Anywhere...\n        </p>\n        <button type=\"button\" class=\"btn btn-success btn-lg\" [routerLink]=\"['/register']\">Register Now</button>\n        <p style=\"font-size: larger;\" class=\"py-2\">\n          Already a user?  &nbsp;Login\n          <a [routerLink]=\"['/login']\">here</a>\n        </p>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserapiService } from '../../services/userapi.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  loggedIn:any = false;\n  fname:any;\n  constructor(\n    private userService:UserapiService,\n    private router:Router) {\n    this.userService.tokenObs.subscribe(what =>{\n      this.loggedIn = what;\n      if(this.loggedIn){\n        this.userService.getProfile().subscribe(value => {\n          this.fname = value['pfname'];\n        })\n      }\n    })\n  }\n  \n  ngOnInit(): void {\n  }\n\n  logout() {\n    // this.userService.logout().subscribe(done => {\n    //   if(done['success']){this.router.navigateByUrl('/');}\n    //   else console.log('logout failed');\n    // })\n    this.userService.logout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<div class=\"container-fluid\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n        Billing System\n    </a>\n    <ul class=\"nav navbar-nav navbar-right\">\n        <li *ngIf=\"!loggedIn\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n        </li>\n        <li *ngIf=\"!loggedIn\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n        </li>\n        <li *ngIf=\"loggedIn\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" >\n            <a class=\"nav-link\" [routerLink]=\"['/bills/create']\">Create Bill</a>\n        </li>\n        <li *ngIf=\"loggedIn\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" >\n            <a class=\"nav-link\" [routerLink]=\"['/bills/show']\" [queryParams]=\"{cancelled:false}\">Show Bills</a>\n        </li>\n        <li *ngIf=\"loggedIn\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\" >\n            <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">DashBoard</a>\n        </li>\n        <li *ngIf=\"loggedIn\" class=\"nav-item dropdown active\">\n            <a class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Hi, {{fname}}\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                <a class=\"dropdown-item\" [routerLink]=\"['/profile']\">\n                    <div class=\"row\">\n                        <span class=\"col-1\">\n                            <i class=\" fa fa-user\"></i>\n                        </span>\n                        <span class=\"col\">\n                            Profile\n                        </span>\n                    </div>\n                </a>\n                <a class=\"dropdown-item\" [routerLink]=\"['/changePwd']\">\n                    <div class=\"row\">\n                        <span class=\"col-1\">\n                            <i class=\"fa fa-key fa-fw\"></i>\n                        </span>\n                        <span class=\"col\">\n                            Change Pwd\n                        </span>\n                    </div>\n                </a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" href=\"/\" (click)=\"logout()\">\n                    <div class=\"row\">\n                        <span class=\"col-1\">\n                            <i class=\" fa fa-sign-out\"></i>\n                        </span>\n                        <span class=\"col\">\n                            Logout\n                        </span>\n                    </div>\n                </a>\n            </div>\n        </li>\n    </ul>\n</div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page404',\n  templateUrl: './page404.component.html',\n  styleUrls: ['./page404.component.css']\n})\nexport class Page404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"background-color: #ecf3f3;\">\n   <div class=\"container align-items-center\">\n      <div class=\"py-5\">\n         <img src=\"/assets/imgs/page404.svg\" alt=\"\" class=\"img-fluid mb-3 d-none d-md-block\">\n      </div>\n      <div class=\"py-5\">\n         <h4 class=\"display-4\" style=\"text-align: center;\">\n            Page Not Found ! <br>\n            <a [routerLink]=\"['/home']\">Click here</a> to goto Home Page\n         </h4>\n      </div>\n   </div>  \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserapiService } from '../../../services/userapi.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  public updatePwdForm:FormGroup;\n  public pwdsMatch:boolean = true;\n  public disableBtn:boolean = true;\n\n  constructor(\n    private router:Router,\n    private fb:FormBuilder,\n    private userservice:UserapiService,\n    private msgService:FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    this.updatePwdForm = this.fb.group({\n      password:['',[Validators.required]],\n      newpassword:['',[Validators.required,Validators.minLength(8),Validators.maxLength(255)]],\n      newpwdrepeat:['',[Validators.required]]\n    })\n    this.newpwd.valueChanges.subscribe((val) => {\n      this.pwdsMatch = (this.newpwd.value == this.newpwdrepeat.value);\n    })\n    this.newpwdrepeat.valueChanges.subscribe((val) => {\n      this.pwdsMatch = this.newpwd.value == this.newpwdrepeat.value;\n    })\n    this.updatePwdForm.valueChanges.subscribe(() => {\n      this.disableBtn = !this.updatePwdForm.valid || !this.pwdsMatch;\n    })\n  }\n\n  get pwd(){return this.updatePwdForm.get('password');}\n  get newpwd(){return this.updatePwdForm.get('newpassword');}\n  get newpwdrepeat(){return this.updatePwdForm.get('newpwdrepeat');}\n\n  toProfile(){\n    this.router.navigateByUrl('/profile');\n  }\n\n  onSubmit(){\n    if(!this.updatePwdForm.valid){return false;}\n    else {\n      this.userservice.changePwd(this.updatePwdForm.value).subscribe(\n        (data) => {\n          if(data['success']){\n            this.router.navigate(['/profile'],{queryParams:{fmsg:'Password Updated'}});\n            // this.msgService.show('Password Updated',{cssClass:'alert-success',timeout:2000})\n          } else if(data['msg']){\n            this.msgService.show(data['msg'],{cssClass:'alert-danger',timeout:2000})\n          }\n        },(err) => {\n          console.log(err);\n        }\n      )\n    }\n  }\n\n}\n","<flash-messages></flash-messages>\n<div class=\"w-100\">\n<div class=\"card mt-5 mb-5 w-50\" style=\"margin-left: 25%;\">\n  <div class=\"card-header\">\n    <h4 class=\"display-4\">Change Password</h4>\n  </div>\n  <div class=\"card-body\">\n    <form [formGroup]=\"updatePwdForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label class=\"heading\">Old Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control input-field\" placeholder=\"Password\" [ngClass]=\"{'is-invalid':pwd.invalid && (pwd.dirty || pwd.touched)}\" required>\n        <span class=\"invalid-feedback\" *ngIf=\"pwd.invalid && (pwd.dirty || pwd.touched)\">\n          <p *ngIf=\"pwd.errors?.required\">Old Password is required</p>\n        </span>\n      </div>\n      \n      <div class=\"form-group\">\n        <label class=\"heading\">New Password</label>\n        <input type=\"password\" formControlName=\"newpassword\" class=\"form-control input-field\" placeholder=\"Password\" [ngClass]=\"{'is-invalid':newpwd.invalid && (newpwd.dirty || newpwd.touched)}\" required>\n        <span class=\"invalid-feedback\" *ngIf=\"newpwd.invalid && (newpwd.dirty || newpwd.touched)\">\n          <p *ngIf=\"newpwd.errors?.required\">New Password is required</p>\n          <p *ngIf=\"newpwd.errors?.minlength || newpwd.errors?.maxlength\">New Password must be of 8 to 255 characters long.</p>\n        </span>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"heading\">Confirm New Password</label>\n        <input type=\"password\" formControlName=\"newpwdrepeat\" class=\"form-control input-field\" placeholder=\"Password\" [ngClass]=\"{'is-invalid':newpwdrepeat.invalid && (newpwdrepeat.dirty || newpwdrepeat.touched)}\" required>\n        <span class=\"invalid-feedback\" *ngIf=\"newpwdrepeat.invalid && (newpwdrepeat.dirty || newpwdrepeat.touched)\">\n          <p *ngIf=\"newpwdrepeat.errors?.required\">Confirm Password is required</p>\n        </span>\n      </div>\n\n      <div class=\"container mt-1 mb-1\" *ngIf=\"(newpwdrepeat.dirty || newpwdrepeat.touched) && (newpwd.dirty || newpwd.touched)\">\n        <p class=\"text-danger\" *ngIf=\"!pwdsMatch\">\n          Both Passwords must match\n        </p>\n      </div>\n      <div class=\"btn-group w-100\">\n        <button type=\"submit\" class=\"btn btn-outline-danger w-50\" [disabled]=\"disableBtn\">Update Password</button>\n        <button type=\"button\" class=\"btn btn-dark w-50\" (click)=\"toProfile()\">Cancel</button>\n      </div>\n    </form>\n  </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserapiService } from '../../../services/userapi.service';\nimport { BillApiService } from '../../../services/bill-api.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  noOfBills:Number = 0;\n  public loading:boolean = true;\n  constructor(\n    private router:Router,\n    private userservice:UserapiService,\n    private billservice:BillApiService\n  ) { }\n\n  ngOnInit(): void {\n    this.billservice.getCountOfBills().subscribe(data => {\n      this.loading = false;\n      this.noOfBills = data['count']\n      console.log(data);\n    });\n  }\n  toCreateBill(): void {\n    this.router.navigateByUrl('/bills/create')\n  }\n  toShowBill(): void {\n    this.router.navigateByUrl('/bills/show')\n  }\n}\n","<div class=\"container loading\" *ngIf=\"loading\">\n    <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n    <div class=\"display-4\" style=\"font-size: x-large;\">\n      Loading... Please Wait\n    </div>\n</div>\n<div class=\"dash-container\" *ngIf=\"!loading\">\n    <div class=\"buttons\">\n        <button class=\"btn btn-success\" (click)=\"toCreateBill()\">\n            <i class=\"fa fa-plus\"></i>\n        </button>\n        <div class=\"cntCircle\">\n            <h1 class=\"display-4\" style=\"margin-top: 25%;color: white;\">\n                Bill Count<br>\n                <span class=\"cnt\">{{noOfBills}}</span>\n            </h1>\n        </div>\n        <button class=\"btn btn-danger\" (click)=\"toShowBill()\">\n            <i class=\"fa fa-eye fa-1\"></i>\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { UserapiService } from '../../../services/userapi.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  loginform:FormGroup;\n  disableBtn:boolean = true;\n\n  constructor(\n    private router:Router,\n    private userservice:UserapiService,\n    private fb:FormBuilder,\n    private flashMsgService:FlashMessagesService,\n    private activatedRoute:ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.loginform = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      password:['',Validators.required]\n    })\n    this.activatedRoute.queryParams.subscribe(params => {\n      if(params.registered){\n        this.flashMsgService.show('Registered Successfully. Login to Continue',{cssClass:'alert-success',timeout:5000})\n      }\n    })\n    this.loginform.valueChanges.subscribe(() => {\n      this.disableBtn = !this.loginform.valid;\n    })\n  }\n\n  get loginForm(){return this.loginform.controls;}\n\n  onSubmit(){\n    if(!this.loginform.valid){return false;}\n    else {\n      this.userservice.login(this.loginform.value).subscribe(\n        (data) => {\n          if(!data.message){\n            console.log('Successfull login')\n            this.router.navigateByUrl('/dashboard')\n          } else {\n            this.flashMsgService.show(data.message,{cssClass:'alert-danger',timeout:2000});\n          }\n        },(err) => {\n          console.log(err);\n        }\n      )\n    }\n  }\n}\n","<div style=\"background-color: #ecf3f3;min-height: 90vh;\">\n  <div class=\"container\">\n    <div class=\"row py-5 align-items-center\">\n      <div class=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\n        <img src=\"/assets/imgs/access_acc.svg\" alt=\"\" class=\"img-fluid mb-3 d-none d-md-block\">\n        <h1>Login To Your Account</h1>\n      </div>\n      <div class=\"col-md-7 col-lg-6 ml-auto\">\n        <form [formGroup]=\"loginform\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"input-group col-lg-12 mb-4\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-white px-4 border-md border-right-0\">\n                <i class=\"fa fa-envelope text-muted\"></i>\n              </span>\n            </div>\n            <input id=\"email\" type=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email Address\" class=\"form-control bg-white border-left-0 border-md\" [ngClass]=\"{'is-invalid':(loginForm.email.dirty || loginForm.email.touched) && loginForm.email.invalid}\" required>\n            <span class=\"invalid-feedback\" *ngIf=\"loginForm.email.invalid && (loginForm.email.dirty || loginForm.email.touched)\">\n              <p *ngIf=\"loginForm.email.errors.required\">Email ID is required.</p>\n              <p *ngIf=\"!loginForm.email.errors.required && loginForm.email.invalid\">Invalid Email ID.</p>\n            </span>\n          </div>\n          \n          <div class=\"input-group col-lg-12 mb-4\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text bg-white px-4 border-md border-right-0\">\n                <i class=\"fa fa-lock text-muted\"></i>\n              </span>\n            </div>\n            <input id=\"password\" type=\"password\" name=\"password\" formControlName=\"password\" placeholder=\"Password\" class=\"form-control bg-white border-left-0 border-md\" [ngClass]=\"{'is-invalid':loginForm.password.invalid && (loginForm.password.dirty || loginForm.password.touched)}\" required>\n            <span class=\"invalid-feedback\" *ngIf=\"loginForm.password.invalid && (loginForm.password.dirty || loginForm.password.touched)\">\n              <p *ngIf=\"loginForm.password.errors.required\">Password is required</p>\n            </span>\n          </div>\n          <div class=\"form-group col-lg-12 mx-auto mb-0\">\n            <button type=\"submit\" class=\"btn btn-primary btn-block py-2\" [disabled]=\"disableBtn\">\n            <span class=\"font-weight-bold\">Login</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<script type=\"text/javascript\">\n  $(function () {\n    $('input').on('focus', function () {\n      $(this).parent().find('.input-group-text').css('border-color', '#80bdff');\n    });\n    $('input').on('blur', function () {\n      $(this).parent().find('.input-group-text').css('border-color', '#ced4da');\n    });\n  });\n</script>","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { UserapiService } from '../../../services/userapi.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  updateform:FormGroup;\n  toUpdate:Boolean = false;\n  userInfo:any = [];\n  public loading:boolean = true;\n  public disableBtn:boolean = false;\n  private fmsg;\n\n  constructor(\n    private userservice:UserapiService,\n    private activatedRoute:ActivatedRoute,\n    private router:Router,\n    private fb:FormBuilder,\n    private msgService:FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    this.userservice.getProfile().subscribe(data => {\n      this.userInfo = data\n      this.loading = false;\n    });\n    this.activatedRoute.queryParams.subscribe(params => {\n      if(params.fmsg){\n        this.msgService.show(params.fmsg,{cssClass:'alert-success',timeout:3000})\n      }\n    })\n    this.updateform = this.fb.group({\n      email:[{value:this.userInfo['email'],disabled:true},[Validators.required]],\n      pfname:['',[Validators.required,Validators.maxLength(100)]],\n      plname:['',[Validators.required,Validators.maxLength(100)]],\n      company_name:['',[Validators.required,Validators.maxLength(50)]],\n      phn_no:['',[\n        Validators.required,Validators.pattern(\"^[0-9]+$\"),\n        Validators.minLength(10),Validators.maxLength(10)]\n      ],\n      address:this.fb.group({\n        place_no:['',[Validators.required,Validators.maxLength(20)]],\n        street:['',[Validators.maxLength(20)]],\n        locality:['',[Validators.required,Validators.maxLength(20)]],\n        city:['',[Validators.required,Validators.maxLength(20)]],\n        state:['',[Validators.required,Validators.maxLength(20)]],\n        pincode:['',[Validators.required,Validators.minLength(6),\n          Validators.maxLength(6),Validators.pattern(\"^[0-9]+$\")]]\n      })\n    })\n    this.updateform.valueChanges.subscribe(() => {\n      this.disableBtn = !this.updateform.valid;\n    })\n  }\n\n  toggle(): void{\n    this.toUpdate = !this.toUpdate;\n    if(this.toUpdate){\n      this.updateform.patchValue({\n        'emailid':this.userInfo['email'],\n        'pfname':this.userInfo['pfname'],\n        'plname':this.userInfo['plname'],\n      })\n    }\n  }\n\n  get pfname(){return this.updateform.get('pfname');}\n  get plname(){return this.updateform.get('plname');}\n  get email(){return this.updateform.get('email');}\n  get phn_no(){return this.updateform.get('phn_no');}\n  get password(){return this.updateform.get('password');}\n  get company_name(){return this.updateform.get('company_name');}\n  get place_no(){return this.updateform.get('address').get('place_no');}\n  get street(){return this.updateform.get('address').get('street');}\n  get locality(){return this.updateform.get('address').get('locality');}\n  get city(){return this.updateform.get('address').get('city');}\n  get state(){return this.updateform.get('address').get('state');}\n  get pincode(){return this.updateform.get('address').get('pincode');}\n\n  updateToggle(): void {\n    this.toUpdate = true;\n    this.updateform.patchValue({\n      'email':this.userInfo['email'],\n      'pfname':this.userInfo['pfname'],\n      'plname':this.userInfo['plname'],\n      'company_name':this.userInfo['company_name'],\n      'phn_no':this.userInfo['phn_no'],\n      'address':this.userInfo['address']\n    })\n  }\n\n  showToggle(): void {\n    this.toUpdate = false;\n  }\n\n  onSubmit() {\n    if(!this.updateform.valid){\n      return false;\n    } else {\n      this.userservice.updateProfile(this.updateform.value)\n      .subscribe(data => {\n        this.userInfo = data\n        console.log(this.userInfo)\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n        this.router.onSameUrlNavigation = 'reload';\n        this.router.navigate(['/profile']);\n      })\n    }\n  }\n}\n","<div class=\"container loading\" *ngIf=\"loading\">\n  <img src=\"assets/imgs/loadinggif1.gif\" class=\"loadinggif\">\n  <div class=\"display-4\" style=\"font-size: x-large;\">\n    Loading... Please Wait\n  </div>\n</div>\n<flash-messages></flash-messages>\n<div class=\"card mt-5 ml-4 mr-4 mb-5\" *ngIf=\"!loading\">\n  <div class=\"card-header\">\n    <h1 class=\"display-4\"><strong>Profile</strong></h1>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <div class=\"sepline\">\n          <div class=\"left-content\">\n            <i class=\"fa fa-user-circle\" style=\"font-size: 150px;\" aria-hidden=\"true\"></i>\n            <h3 style=\"padding-top: 10px;\">Hello Ji</h3>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-8\">\n        <div class=\"right-content\">\n          <div class=\"navbar-tabs\">\n            <ul class=\"nav nav-tabs\" id=\"optionsTab\" role=\"tablist\">\n              <li class=\"nav-item\">\n                <a (click)=\"showToggle()\" class=\"nav-link active\" id=\"show-tab\" href=\"#show\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"showProfile\" aria-selected=\"true\">Show</a>\n              </li>\n              <li class=\"nav-item\">\n                <a (click)=\"updateToggle()\" class=\"nav-link\" id=\"update-tab\" href=\"#update\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"updateProfile\" aria-selected=\"false\">Update</a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"container\">\n            <div class=\"tab-content\" id=\"optionsTabContent\">\n              <div class=\"tab-pane fade show active\" id=\"show\" role=\"tabpanel\" aria-labelledby=\"show-tab\">\n                <div class=\"display-4\">\n                  {{userInfo.pfname + \" \" + userInfo.plname}}\n                </div><hr>\n                <div class=\"container\">\n                  <div class=\"row field-item\">\n                    <span class=\"col-1 icon\">\n                      <i class=\"fa fa-building\"></i>\n                    </span>\n                    <span class=\"col-11 field-value\">\n                      {{ userInfo.company_name }}\n                    </span>\n                  </div>\n  \n                  <div class=\"row field-item\">\n                    <span class=\"col-1 icon\">\n                      <i class=\"fa fa-map-marker\"></i>\n                    </span>\n                    <span class=\"coll-11 field-value\">\n                      {{userInfo.address.locality + \", \"+ userInfo.address.city}}\n                    </span>\n                  </div>\n  \n                  <div class=\"row field-item\">\n                    <span class=\"col-1 icon\">\n                      <i class=\"fa fa-envelope\"></i>\n                    </span>\n                    <span class=\"col-11 field-value\">\n                      {{userInfo.email}}\n                    </span>\n                  </div>\n                  \n                  <div class=\"row field-item\">\n                    <span class=\"col-1 icon\">\n                      <i class=\"fa fa-phone\"></i>\n                    </span>\n                    <span class=\"col-11 field-value\">\n                      {{userInfo.phn_no}}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"tab-pane fade\" id=\"update\" role=\"tabpanel\" aria-labelledby=\"update-tab\">\n                <form [formGroup]=\"updateform\" (ngSubmit)=\"onSubmit()\">\n                  <label for=\"name\" class=\"heading\">Name</label>\n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-5\">\n                      <input *ngIf=\"toUpdate\" class=\"form-control\" type=\"text\" formControlName=\"pfname\" placeholder=\"First Name\" [ngClass]=\"{'is-invalid':pfname.invalid && (pfname.touched || pfname.dirty)}\">\n                      <span class=\"invalid-feedback\" *ngIf=\"pfname.invalid && (pfname.touched || pfname.dirty)\">\n                        <p *ngIf=\"pfname.errors?.required\">First Name is required.</p>\n                        <p *ngIf=\"pfname.errors?.maxlength\">It must be max 100 characters long.</p>\n                      </span>\n                    </div>\n                    <div class=\"form-group col-md-7\">\n                      <input *ngIf=\"toUpdate\" class=\"form-control\" type=\"text\" formControlName=\"plname\" placeholder=\"Last Name\" [ngClass]=\"{'is-invalid':plname.invalid && (plname.touched || plname.dirty)}\">\n                      <span class=\"invalid-feedback\" *ngIf=\"plname.invalid && (plname.touched || plname.dirty)\">\n                        <p *ngIf=\"plname.errors?.required\">Last Name is required.</p>\n                        <p *ngIf=\"plname.errors?.maxlength\">It must be max 100 characters long.</p>\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"email\" class=\"heading\">Email </label>\n                    <input *ngIf=\"toUpdate\" class=\"form-control\" type=\"email\" formControlName=\"email\">\n                  </div>\n                  \n                  <div class=\"form-group\">\n                    <label for=\"company_name\" class=\"heading\">Company Name</label>\n                    <input formControlName=\"company_name\" type=\"text\" class=\"form-control\" placeholder=\"eg. Google Inc.\" [ngClass]=\"{'is-invalid':company_name.invalid && (company_name.touched || company_name.dirty)}\">\n                    <span class=\"invalid-feedback\" *ngIf=\"company_name.invalid && (company_name.touched || company_name.dirty)\">\n                      <p *ngIf=\"company_name.errors?.required\">Company Name is required.</p>\n                      <p *ngIf=\"company_name.errors?.maxlength\">It must be max 100 characters long.</p>\n                    </span>\n                  </div>\n  \n                  <div class=\"form-row\">\n                    <div class=\"form-group col-md-3\">\n                      <label for=\"country_code\" class=\"heading\">Country Code</label>\n                      <input type=\"text\" class=\"form-control\" value=\"+91\" disabled>\n                    </div>\n                    <div class=\"form-group col-md-9\">\n                      <label for=\"phn_no\" class=\"heading\">Contact No:</label>\n                      <input formControlName=\"phn_no\" type=\"text\" class=\"form-control\" placeholder=\"eg. 9876543210\" [ngClass]=\"{'is-invalid':phn_no.invalid && (phn_no.touched || phn_no.dirty)}\">\n                      <span class=\"invalid-feedback\" *ngIf=\"phn_no.invalid && (phn_no.touched || phn_no.dirty)\">\n                        <p *ngIf=\"phn_no.errors?.required\">Phone Number is required.</p>\n                        <p *ngIf=\"phn_no.errors?.pattern;else lenErr\">Only numeric digits allowed.</p>\n                        <ng-template #lenErr>\n                          <p *ngIf=\"phn_no.errors?.minlength || phn_no.errors?.maxlength\">It must be of 10 digits long.</p>\n                        </ng-template>\n                      </span>\n                    </div>\n                  </div>\n  \n                  <div formGroupName=\"address\">\n                    <div class=\"form-row\">\n                      <div class=\"form-group col-md-5\">\n                        <label for=\"inputCity\" class=\"heading\">Place</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"place_no\" placeholder=\"eg. A-1234, Pramukh Arcade\" [ngClass]=\"{'is-invalid':place_no.invalid && (place_no.dirty || place_no.touched)}\">\n                        <span class=\"invalid-feedback\" *ngIf=\"place_no.invalid && (place_no.dirty || place_no.touched)\">\n                          <p *ngIf=\"place_no.errors?.required\">Place No. is required.</p>\n                          <p *ngIf=\"place_no.errors?.maxlength\">Place No. must be at most 50 characters long.</p>\n                      </span>          \n                      </div>\n                      <div class=\"form-group col-md-7\">\n                        <label for=\"inputState\" class=\"heading\">Street</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"street\" placeholder=\"eg. Near Reliance Circle\" [ngClass]=\"{'is-invalid':street.invalid && (street.dirty || street.touched)}\">\n                        <span class=\"invalid-feedback\" *ngIf=\"street.invalid && (street.dirty || street.touched)\">\n                          <p *ngIf=\"street.errors?.maxlength\">Street must be at most 50 characters long.</p>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"inputZip\" class=\"heading\">Landmark</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"locality\" placeholder=\"eg. Kudasan\" [ngClass]=\"{'is-invalid':locality.invalid && (locality.dirty || locality.touched)}\">\n                      <span class=\"invalid-feedback\" *ngIf=\"locality.invalid && (locality.dirty || locality.touched)\">\n                        <p *ngIf=\"locality.errors?.required\">Landmark is required.</p>\n                        <p *ngIf=\"locality.errors?.maxlength\">Landmark must be at most 50 characters long.</p>\n                      </span>\n                    </div>\n                    <div class=\"form-row\">\n                      <div class=\"form-group col-md-5\">\n                        <label for=\"inputCity\" class=\"heading\">City</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"city\" placeholder=\"eg. Gandhinagar\" [ngClass]=\"{'is-invalid':city.invalid && (city.dirty || city.touched)}\">\n                        <span class=\"invalid-feedback\" *ngIf=\"city.invalid && (city.dirty || city.touched)\">\n                          <p *ngIf=\"city.errors?.required\">City is required.</p>\n                          <p *ngIf=\"city.errors?.maxlength\">City must be at most 50 characters long.</p>\n                        </span>\n                      </div>\n                      <div class=\"form-group col-md-5\">\n                        <label for=\"inputState\" class=\"heading\">State</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"state\" [ngClass]=\"{'is-invalid':state.invalid && (state.dirty || state.touched)}\">\n                        <span class=\"invalid-feedback\" *ngIf=\"state.invalid && (state.dirty || state.touched)\" >\n                          <p *ngIf=\"state.errors?.required\">State is required.</p>\n                          <p *ngIf=\"state.errors?.maxlength\">State must be at most 50 characters long.</p>\n                        </span>\n                      </div>\n                      <div class=\"form-group col-md-2\">\n                        <label for=\"inputZip\" class=\"heading\">Zip</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"pincode\" placeholder=\"123456\" [ngClass]=\"{'is-invalid':pincode.invalid && (pincode.dirty || pincode.touched)}\">\n                        <span class=\"invalid-feedback\" *ngIf=\"pincode.invalid && (pincode.dirty || pincode.touched)\" >\n                          <p *ngIf=\"pincode.errors?.required\">Pincode is required.</p>\n                          <p *ngIf=\"pincode.errors?.pattern\">Pincode must contain digits only.</p>\n                          <p *ngIf=\"!pincode.errors?.pattern && (pincode.errors?.maxlength || pincode.errors?.minlength)\">Pincode must be 6 digits long.</p>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n  \n                  <button type=\"submit\" *ngIf=\"toUpdate\" class=\"btn btn-primary mt-3 mr-3 mb-5 w-100\" [disabled]=\"disableBtn\">Submit</button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserapiService } from '../../../services/userapi.service';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  signupform:FormGroup;\n  disableBtn:boolean = true;\n\n  constructor(\n    private userservice:UserapiService,\n    private router:Router,\n    private fb:FormBuilder,\n    private flashMsgService:FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    this.signupform = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      pfname:['',[Validators.required,Validators.maxLength(100)]],\n      plname:['',[Validators.required,Validators.maxLength(100)]],\n      company_name:['',[Validators.required,Validators.maxLength(50)]],\n      phn_no:['',[Validators.required,Validators.pattern(\"^[0-9]+$\"),Validators.minLength(10),Validators.maxLength(10)]],\n      address:this.fb.group({\n        place_no:['',[Validators.required,Validators.maxLength(50)]],\n        street:['',[Validators.maxLength(50)]],\n        locality:['',[Validators.required,Validators.maxLength(50)]],\n        city:['',[Validators.required,Validators.maxLength(50)]],\n        state:['',[Validators.required,Validators.maxLength(50)]],\n        pincode:['',[Validators.required,Validators.pattern(\"^[0-9]+$\"),Validators.minLength(6),Validators.maxLength(6)]]\n      }),\n      password:['',[Validators.required,Validators.minLength(8),Validators.maxLength(255)]]\n    })\n    this.signupform.valueChanges.subscribe(() => {\n      this.disableBtn = !this.signupform.valid;\n    })\n  }\n\n  get signupForm(){return this.signupform.controls;}\n  get pfname(){return this.signupform.get('pfname');}\n  get plname(){return this.signupform.get('plname');}\n  get email(){return this.signupform.get('email');}\n  get phn_no(){return this.signupform.get('phn_no');}\n  get password(){return this.signupform.get('password');}\n  get company_name(){return this.signupform.get('company_name');}\n  get place_no(){return this.signupform.get('address').get('place_no');}\n  get street(){return this.signupform.get('address').get('street');}\n  get locality(){return this.signupform.get('address').get('locality');}\n  get city(){return this.signupform.get('address').get('city');}\n  get state(){return this.signupform.get('address').get('state');}\n  get pincode(){return this.signupform.get('address').get('pincode');}\n\n  onSubmit() {\n    if(!this.signupform.valid){console.log('invalid');return false;}\n    else {\n      this.userservice.register(this.signupform.value).subscribe(\n        (done) => {\n          if(done.success==true){\n            console.log('success')\n            // this.flashMsgService.show('Registered Successfully. Please Login to proceed',{cssClass:'alert-success',timeout:3000})\n            // this.router.navigateByUrl('/dashboard')\n            this.router.navigate(['/login'],{queryParams:{registered:true}});            \n          } else {\n            console.log('failed');\n            this.flashMsgService.show(done.message,{cssClass:'alert-warning',timeout:3000})\n          }\n        },(err) => {\n          console.log(err);\n        }\n      )\n    }\n  }\n}\n","<div style=\"background-color: #ecf3f3;\">\n  <div class=\"container\" >\n    <div class=\"row py-5 align-items-center\">\n      <div class=\"col-md-7 col-lg-6 mr-auto\">\n        <h1 class=\"display-4\" style=\"font-weight: 500;\">Create Your Account</h1>\n        <form [formGroup]=\"signupform\" (ngSubmit)=\"onSubmit()\">\n          <label for=\"Name\" class=\"heading\">Name</label>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-5\">\n              <input formControlName=\"pfname\" class=\"form-control\" placeholder=\"First name\" type=\"text\" [ngClass]=\"{'is-invalid':pfname.invalid && (pfname.dirty || pfname.touched)}\" >\n              <span class=\"invalid-feedback\" *ngIf=\"pfname.invalid && (pfname.dirty || pfname.touched)\">\n                <p>First Name is required.</p>\n              </span>\n            </div>\n            <div class=\"form-group col-md-7\">\n              <input formControlName=\"plname\" class=\"form-control\" placeholder=\"Last name\" type=\"text\" [ngClass]=\"{'is-invalid':plname.invalid && (plname.dirty || plname.touched)}\">\n              <span class=\"invalid-feedback\" *ngIf=\"plname.invalid && (plname.dirty || plname.touched)\">\n                <p>Last Name is required.</p>\n              </span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"company_name\" class=\"heading\">Company Name</label>\n            <input formControlName=\"company_name\" type=\"text\" class=\"form-control\" placeholder=\"eg. Google Inc.\" [ngClass]=\"{'is-invalid':company_name.invalid && (company_name.dirty || company_name.touched)}\">\n            <span class=\"invalid-feedback\" *ngIf=\"company_name.invalid && (company_name.dirty || company_name.touched)\">\n              <p *ngIf=\"company_name.errors?.required\">Company Name is required.</p>\n              <p *ngIf=\"company_name.errors?.maxlength\">Company Name must be at most 50 characters long.</p>\n            </span>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"email\" class=\"heading\">Email ID</label>\n              <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"eg. abc@gmail.com\" [ngClass]=\"{'is-invalid':email.invalid && (email.dirty || email.touched)}\">\n              <span class=\"invalid-feedback\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n                <p *ngIf=\"email.errors?.required\">Email ID is required.</p>\n                <p *ngIf=\"!email.errors?.required && email.invalid\">Invalid Email ID.</p>\n              </span>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label for=\"password\" class=\"heading\">Password</label>\n              <input formControlName=\"password\" type=\"password\" class=\"form-control\" [ngClass]=\"{'is-invalid':password.invalid && (password.dirty || password.touched)}\">\n              <span class=\"invalid-feedback\" *ngIf=\"password.invalid && (password.dirty || password.touched)\">\n                <p *ngIf=\"password.errors?.required\">Password is required</p>\n                <p *ngIf=\"password.errors?.maxlength || password.errors?.minlength\">Password must be 8 to 255 characters long.</p>\n              </span>\n            </div>\n          </div>\n          \n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label for=\"country_code\" class=\"heading\">Country Code</label>\n              <input type=\"text\" class=\"form-control\" value=\"+91\" disabled>\n            </div>\n            <div class=\"form-group col-md-9\">\n              <label for=\"phn_no\" class=\"heading\">Contact Number</label>\n              <input formControlName=\"phn_no\" type=\"text\" class=\"form-control\" placeholder=\"eg. 9876543210\" [ngClass]=\"{'is-invalid':phn_no.invalid && (phn_no.dirty || phn_no.touched)}\">\n              <span class=\"invalid-feedback\" *ngIf=\"phn_no.invalid && (phn_no.dirty || phn_no.touched)\">\n                <p *ngIf=\"phn_no.errors?.required\">Phone Number is required.</p>\n                <p *ngIf=\"phn_no.errors?.pattern\">Phone number must only contain numeric digits.</p>\n                <p *ngIf=\"!phn_no.errors?.pattern && (phn_no.errors?.maxlength || phn_no.errors?.minlength)\">Phone Number must be 10 digits long.</p>\n              </span>\n            </div>\n          </div>\n          <div formGroupName=\"address\">\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-5\">\n                <label for=\"inputCity\" class=\"heading\">Place</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"place_no\" placeholder=\"eg. A-1234, Pramukh Arcade\" [ngClass]=\"{'is-invalid':place_no.invalid && (place_no.dirty || place_no.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"place_no.invalid && (place_no.dirty || place_no.touched)\">\n                    <p *ngIf=\"place_no.errors?.required\">Place No. is required.</p>\n                    <p *ngIf=\"place_no.errors?.maxlength\">Place No. must be at most 50 characters long.</p>\n                </span>\n              </div>\n              <div class=\"form-group col-md-7\">\n                <label for=\"inputState\" class=\"heading\">Street</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"street\" placeholder=\"eg. Near Reliance Circle\" [ngClass]=\"{'is-invalid':street.invalid && (street.dirty || street.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"street.invalid && (street.dirty || street.touched)\">\n                  <p *ngIf=\"street.errors?.maxlength\">Street must be at most 50 characters long.</p>\n                </span>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-6\">\n                <label for=\"inputZip\" class=\"heading\">Landmark</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"locality\" placeholder=\"eg. Kudasan\" [ngClass]=\"{'is-invalid':locality.invalid && (locality.dirty || locality.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"locality.invalid && (locality.dirty || locality.touched)\">\n                  <p *ngIf=\"locality.errors?.required\">Landmark is required.</p>\n                  <p *ngIf=\"locality.errors?.maxlength\">Landmark must be at most 50 characters long.</p>\n                </span>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label for=\"inputCity\" class=\"heading\">City</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"city\" placeholder=\"eg. Gandhinagar\" [ngClass]=\"{'is-invalid':city.invalid && (city.dirty || city.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"city.invalid && (city.dirty || city.touched)\">\n                  <p *ngIf=\"city.errors?.required\">City is required.</p>\n                  <p *ngIf=\"city.errors?.maxlength\">City must be at most 50 characters long.</p>\n                </span>\n              </div>\n            </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col-md-6\">\n                <label for=\"inputState\" class=\"heading\">State</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"state\" placeholder=\"Gujarat\" [ngClass]=\"{'is-invalid':state.invalid && (state.dirty || state.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"state.invalid && (state.dirty || state.touched)\" >\n                  <p *ngIf=\"state.errors?.required\">State is required.</p>\n                  <p *ngIf=\"state.errors?.maxlength\">State must be at most 50 characters long.</p>\n                </span>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label for=\"inputZip\" class=\"heading\">Zip</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"pincode\" placeholder=\"123456\" [ngClass]=\"{'is-invalid':pincode.invalid && (pincode.dirty || pincode.touched)}\">\n                <span class=\"invalid-feedback\" *ngIf=\"pincode.invalid && (pincode.dirty || pincode.touched)\" >\n                  <p *ngIf=\"pincode.errors?.required\">Pincode is required.</p>\n                  <p *ngIf=\"pincode.errors?.pattern\">Pincode must contain digits only.</p>\n                  <p *ngIf=\"!pincode.errors?.pattern && (pincode.errors?.maxlength || pincode.errors?.minlength)\">Pincode must be 6 digits long.</p>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"btn-grp\" style=\"width:100%\">\n            <button type=\"submit\" class=\"btn btn-dark mt-2 mr-5 w-100\" [disabled]=\"disableBtn\">Register</button>\n          </div>\n          <flash-messages></flash-messages>\n        </form>\n      </div>\n      <div class=\"col-md-5 pr-lg-5 mb-5 mb-md-0\">\n        <img src=\"/assets/imgs/new_acc.svg\" alt=\"\" class=\"img-fluid mb-3 d-none d-md-block\">\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router,CanActivate } from '@angular/router';\nimport { UserapiService } from './userapi.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(\n    private userService:UserapiService,\n    private router:Router\n  ) { }\n\n  canActivate() {\n    if(!this.userService.isLoggedIn()){\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n    return true;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForwardAuthGuardService implements CanActivate {\n  constructor(\n    private userService:UserapiService,\n    private router:Router\n  ) {}\n\n  canActivate() {\n    if(this.userService.isLoggedIn()){\n      this.router.navigateByUrl('/dashboard');\n      return false;\n    }\n    return true;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError, from, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillApiService {\n\n  prodURL:string = `http://localhost:8000`\n  deployUrl:string = ``;\n  baseURL:string = `${this.deployUrl}/api/bill`\n  headers = new HttpHeaders().set('Content-Type','application/json')\n\n  private token:string;\n\n  constructor(private http:HttpClient) {\n    this.token = localStorage.getItem('auth-token');\n  }\n\n  getCountOfBills(): Observable<any> {\n    let cururl = `${this.baseURL}/billcnt`;\n    return this.http.get(cururl);\n  }\n\n  getBill(id):Observable<any> {\n    let cururl = `${this.baseURL}/${id}`;\n    return this.http.get(cururl);\n  }\n\n  getAllBills():Observable<any> {\n    let cururl = `${this.baseURL}/bills`;\n    return this.http.get(cururl);\n  }\n  \n  getParticularBills(cancelled): Observable<any> {\n    let cururl = `${this.baseURL}/bills/${cancelled}`;\n    return this.http.get(cururl);\n  }\n\n  getNextBillDetails(bill_date):Observable<any> {\n    let cururl = `${this.baseURL}/nextbilldet/${bill_date}`;\n    return this.http.get(cururl);\n  }\n  getLastBillDetails():Observable<any> {\n    let cururl = `${this.baseURL}/lastbilldet`;\n    return this.http.get(cururl);\n  }\n\n  postBill(billdata):Observable<any> {\n    let cururl = `${this.baseURL}/create`;\n    return this.http.post(cururl,billdata).pipe(\n      map((res:Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n  cancelBill(cancelData,bid):Observable<any> {\n    let cururl = `${this.baseURL}/cancel/${bid}`\n    return this.http.put(cururl,cancelData).pipe(\n      map((res:Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n\n  errorMgmt(error:HttpErrorResponse) {\n    let errmsg = '';\n    if(error.error instanceof ErrorEvent){\n      errmsg = error.error.message;\n    } else {\n      errmsg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errmsg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler,HttpEvent,HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor( ) { }\n  \n  intercept(request:HttpRequest<any>, next:HttpHandler) : Observable<HttpEvent<any>> {\n    var token = localStorage.getItem('auth-token');\n    if(token){\n      request = request.clone({\n        setHeaders: {\n          Authorization: localStorage.getItem('auth-token')\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, from, BehaviorSubject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserapiService {\n  prodURL:string = `http://localhost:8000`;\n  deployUrl:string = ``;\n  baseURL:string = `${this.deployUrl}/api/user`;\n  headers = new HttpHeaders().set('Content-Type','application/json')\n  \n  private token:string = null;\n  private tokenBehaviour:BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public tokenObs:Observable<boolean> = this.tokenBehaviour.asObservable();\n\n\n  constructor(\n    private http:HttpClient,\n    private jwtHelper:JwtHelperService\n  ) { }\n\n  \n  private setToken(token):void {\n    localStorage.setItem('auth-token',token);\n    this.token = token;\n    this.tokenBehaviour.next(true);\n  }\n  \n  private getToken():any {\n    if(!this.token){\n      this.token = localStorage.getItem('auth-token');\n      if(this.token && !this.jwtHelper.isTokenExpired(this.token)){\n        this.tokenBehaviour.next(true);\n      } \n    }\n    return this.token;\n  }\n\n  private deleteToken():void {\n    localStorage.removeItem('auth-token');\n    this.token = null;\n    this.tokenBehaviour.next(false);\n  }\n  \n  isLoggedIn() {\n    var token = this.getToken();\n    if(this.jwtHelper.isTokenExpired(token)){\n      this.deleteToken();\n      return false;\n    }\n    return true;\n  }\n\n  // register user\n  register(data):Observable<any> {\n    let cururl = `${this.baseURL}/register`;\n    return this.http.post(cururl,data).pipe(\n      map((res:Response) => {\n        return res || {}\n      }), \n      catchError(this.errorMgmt)\n    );\n  }\n\n  // login user\n  login(data):Observable<any> {\n    let cururl = `${this.baseURL}/login`;\n    return this.http.post(cururl,data).pipe(\n      map((res:Response) => {\n        if(!res['message']){\n          this.setToken(res['token']);\n        }\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    );\n  }\n\n  // logout user\n  logout() {\n    this.deleteToken();\n    this.tokenBehaviour.next(false);\n  }\n\n  // user data\n  getProfile() {\n    let cururl = `${this.baseURL}/profile`;\n    return this.http.get(cururl);\n  }\n\n  // update profile\n  updateProfile(newdata):Observable<any> {\n    let cururl = `${this.baseURL}/update`;\n    return this.http.put(cururl,newdata).pipe(\n      catchError(this.errorMgmt)\n    );\n  }\n\n  changePwd(newdata):Observable<any> {\n    let cururl = `${this.baseURL}/changePwd`;\n    return this.http.put(cururl,newdata).pipe(\n      map((res:Response) => {\n        return res;\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n  // error management\n  errorMgmt(error:HttpErrorResponse) {\n    let errmsg = '';\n    if(error.error instanceof ErrorEvent){\n      errmsg = error.error.message;\n    } else {\n      errmsg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errmsg);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}